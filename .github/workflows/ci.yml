name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python 3.12.3
      uses: actions/setup-python@v5
      with:
        python-version: 3.12.3

    - name: Install Lint & Format Tools
      run: |
        pip install flake8 black

    - name: Run flake8 (Lint)
      run: flake8 .

    - name: Check code format with black
      run: black --check .

    - name: Check Docker Versions
      run: |
        docker --version
        docker compose version

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build & Push Docker Images
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/worker:latest ./worker
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/scheduler:latest ./scheduler
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/web:latest ./web

        docker push ${{ secrets.DOCKERHUB_USERNAME }}/worker:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/scheduler:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/web:latest

name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: [self-hosted, Linux, X64]
    environment: production
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create .env
        run: |
          {
            echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}"
            echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}"
            echo "RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}"
            echo "RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }}"
          } > .env
          chmod 600 .env

      - name: Up (pull from Hub, no build on prod)
        run: |
          docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d --pull always --no-build
          docker compose ps